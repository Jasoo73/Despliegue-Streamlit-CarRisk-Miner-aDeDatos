# -*- coding: utf-8 -*-
"""8- Despliegue_Clasificacion_CarRisk.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uU2iE_sbNdbFAOartN1jPmwVQIwsOSx9

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'modelo-class.pkl'
with open(filename, 'rb') as file:
    modelTree, model_rf, modelKnn, modelNN, modelSVM, labelencoder, variables, min_max_scaler = pickle.load(file)

#Cargamos los datos futuros
#datos = pd.read_csv("/content/carRisk-future.csv")
#datos.head()

#Se crea interfaz gráfica con streamlit para captura de los datos
import streamlit as st

st.title('Predicción de riesgo de mortalidad en vehículos')

age = st.slider('Edad', min_value=18, max_value=80, value=30, step=1)
cartype = st.selectbox('Tipo de carro', ['combi', 'sport', 'family', 'minivan'])

#Dataframe
datos = pd.DataFrame([[age, cartype]], columns=['age', 'cartype']) #Dataframe con los mismos nombres de variables

#Se realiza la preparación
data_preparada=datos.copy()

#En despliegue drop_first= False
data_preparada = pd.get_dummies(data_preparada, columns=['cartype'], drop_first=False, dtype=int)
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

#Se normaliza la edad para predecir con Knn, Red, svm
#En los despliegues no se llama fit
#data_preparada[['Edad']]= min_max_scaler.transform(data_preparada[['Edad']])
#data_preparada.head()

"""# ***Predicciones***

# **El modelo presenta un error del 100% (Precision)**
"""

#Hacemos la predicción con el Tree
Y_pred = modelTree.predict(data_preparada)
print(Y_pred)

datos['Prediccion']=labelencoder.inverse_transform(Y_pred)
datos.head()

#Predicciones finales
datos